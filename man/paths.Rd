% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paths.R
\name{Pathways}
\alias{Pathways}
\alias{dag_paths}
\alias{ggdag_paths}
\alias{ggdag_paths_fan}
\title{Find Open Paths Between Variables}
\usage{
dag_paths(
  .dag,
  from = NULL,
  to = NULL,
  adjust_for = NULL,
  limit = 100,
  directed = FALSE,
  paths_only = FALSE,
  ...
)

ggdag_paths(
  .tdy_dag,
  from = NULL,
  to = NULL,
  adjust_for = NULL,
  limit = 100,
  directed = FALSE,
  shadow = TRUE,
  ...,
  size = 1,
  edge_type = c("link_arc", "link", "arc", "diagonal"),
  node_size = 16,
  text_size = 3.88,
  label_size = text_size,
  text_col = "white",
  label_col = "black",
  edge_width = 0.6,
  edge_cap = 8,
  arrow_length = 5,
  use_edges = TRUE,
  use_nodes = TRUE,
  use_stylized = FALSE,
  use_text = TRUE,
  use_labels = FALSE,
  text = NULL,
  label = NULL,
  node = deprecated(),
  stylized = deprecated()
)

ggdag_paths_fan(
  .tdy_dag,
  from = NULL,
  to = NULL,
  adjust_for = NULL,
  limit = 100,
  directed = FALSE,
  ...,
  shadow = TRUE,
  spread = 0.7,
  size = 1,
  node_size = 16,
  text_size = 3.88,
  label_size = text_size,
  text_col = "white",
  label_col = "black",
  edge_width = 0.6,
  edge_cap = 8,
  arrow_length = 5,
  use_edges = TRUE,
  use_nodes = TRUE,
  use_stylized = FALSE,
  use_text = TRUE,
  use_labels = FALSE,
  text = NULL,
  label = NULL,
  node = deprecated(),
  stylized = deprecated()
)
}
\arguments{
\item{.dag, .tdy_dag}{input graph, an object of class \code{tidy_dagitty} or
\code{dagitty}}

\item{from}{character vector of length 1, name of exposure variable. Default
is \code{NULL}, in which case it will check the input DAG for exposure.}

\item{to}{character vector of length 1, name of exposure variable. Default is
\code{NULL}, in which case it will check the input DAG for exposure.}

\item{adjust_for}{character vector, a set of variables to control for.
Default is \code{NULL}.}

\item{limit}{maximum amount of paths to show. In general, the number of paths grows
exponentially with the number of variables in the graph, such that path inspection
is not useful except for the most simple models.}

\item{directed}{logical. Should only directed paths be shown?}

\item{paths_only}{logical. Should only open paths be returned? Default is
\code{FALSE}, which includes every variable and edge in the DAG regardless
if they are part of the path.}

\item{...}{additional arguments passed to \code{tidy_dagitty()}}

\item{shadow}{logical. Show edges which are not on an open path?}

\item{size}{A numeric value scaling the size of all elements in the DAG. This
allows you to change the scale of the DAG without changing the proportions.}

\item{edge_type}{The type of edge, one of "link_arc", "link", "arc",
"diagonal".}

\item{node_size}{The size of the nodes.}

\item{text_size}{The size of the text.}

\item{label_size}{The size of the labels.}

\item{text_col}{The color of the text.}

\item{label_col}{The color of the labels.}

\item{edge_width}{The width of the edges.}

\item{edge_cap}{The size of edge caps (the distance between the arrowheads
and the node borders).}

\item{arrow_length}{The length of arrows on edges.}

\item{use_edges}{A logical value. Include a \verb{geom_dag_edges*()} function? If
\code{TRUE}, which is determined by \code{edge_type}.}

\item{use_nodes}{A logical value. Include \code{geom_dag_point()}?}

\item{use_stylized}{A logical value. Include \code{geom_dag_node()}?}

\item{use_text}{A logical value. Include \code{geom_dag_text()}?}

\item{use_labels}{A logical value. Include \code{geom_dag_label_repel()}?}

\item{text}{The bare name of a column to use for \code{geom_dag_text()}. If
\code{use_text = TRUE}, the default is to use \code{name}.}

\item{label}{The bare name of a column to use for \code{geom_dag_label_repel()}.
If \code{use_labels = TRUE}, the default is to use \code{label}.}

\item{node}{Deprecated.}

\item{stylized}{Deprecated.}

\item{spread}{the width of the fan spread}
}
\value{
a \code{tidy_dagitty} with a \code{path} column for path variables and a \code{set}
grouping column or a \code{ggplot}.
}
\description{
\code{dag_paths} finds open paths between a given exposure and outcome.
\code{ggdag_paths} and \code{ggdag_paths_fan} plot all open paths. See
\code{\link[dagitty:paths]{dagitty::paths()}} for details.
}
\examples{
confounder_triangle(x_y_associated = TRUE) \%>\%
  dag_paths(from = "x", to = "y")

confounder_triangle(x_y_associated = TRUE) \%>\%
  ggdag_paths(from = "x", to = "y")

butterfly_bias(x_y_associated = TRUE) \%>\%
  ggdag_paths_fan(shadow = TRUE)

}
