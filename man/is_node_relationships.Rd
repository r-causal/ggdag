% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_functions.R
\name{is_node_relationships}
\alias{is_node_relationships}
\alias{is_parent}
\alias{is_child}
\alias{is_ancestor}
\alias{is_descendant}
\alias{is_adjacent}
\title{Test node relationships}
\usage{
is_parent(.dag, .var, .node)

is_child(.dag, .var, .node)

is_ancestor(.dag, .var, .node)

is_descendant(.dag, .var, .node)

is_adjacent(.dag, .var, .node)
}
\arguments{
\item{.dag}{A \code{tidy_dagitty} or \code{dagitty} object}

\item{.var}{A character string specifying the variable to test}

\item{.node}{A character string specifying the reference node}
}
\value{
A logical value indicating whether the relationship holds
}
\description{
These functions test relationships between nodes in a DAG:
\itemize{
\item \code{is_parent()} tests whether one node is a parent of another
\item \code{is_child()} tests whether one node is a child of another
\item \code{is_ancestor()} tests whether one node is an ancestor of another
\item \code{is_descendant()} tests whether one node is a descendant of another
\item \code{is_adjacent()} tests whether two nodes are adjacent (connected by an edge)
}
}
\examples{
dag <- dagify(
  y ~ x + z,
  x ~ z
)

is_parent(dag, "z", "x")
is_child(dag, "x", "z")
is_ancestor(dag, "z", "y")
is_descendant(dag, "y", "z")
is_adjacent(dag, "x", "y")

}
