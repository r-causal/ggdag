% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paths.R
\name{edge_backdoor}
\alias{edge_backdoor}
\title{Classify DAG edges as backdoor or direct}
\usage{
edge_backdoor(
  .dag,
  from = NULL,
  to = NULL,
  adjust_for = NULL,
  open_only = TRUE,
  ...
)
}
\arguments{
\item{.dag}{input graph, an object of class \code{tidy_dagitty} or
\code{dagitty}}

\item{from}{character vector of length 1, name of exposure variable. Default
is \code{NULL}, in which case it will check the input DAG for exposure.}

\item{to}{character vector of length 1, name of exposure variable. Default is
\code{NULL}, in which case it will check the input DAG for exposure.}

\item{adjust_for}{character vector, a set of variables to control for.
Default is \code{NULL}.}

\item{open_only}{logical. If \code{TRUE} (default), only considers open paths. If
\code{FALSE}, includes information about closed paths as well.}

\item{...}{additional arguments passed to \code{tidy_dagitty()}}
}
\value{
A \code{tidy_dagitty} object with additional columns:
\itemize{
\item \code{path_type}: "backdoor", "direct", or "both" classification for each edge
\item \code{open}: logical indicating if the edge is part of an open path
}
}
\description{
\code{edge_backdoor()} identifies edges as being on backdoor paths or direct
causal paths between an exposure and outcome. This function adds edge-level
information to the tidy DAG object, classifying each edge based on the types
of paths it appears on.
}
\details{
Edges are classified by examining the paths between exposure and outcome:
\itemize{
\item Direct edges appear only on directed causal paths
\item Backdoor edges appear only on backdoor paths
\item Both edges appear on both direct and backdoor paths
}

When \code{open_only = TRUE} (default), \code{path_type} will be NA for edges that are
only part of closed paths.
}
\examples{
# Create a DAG with both direct and backdoor paths
dag <- dagify(
  y ~ x + z,
  x ~ z,
  exposure = "x",
  outcome = "y"
)

# Classify edges
edge_backdoor(dag)

# Include closed paths
edge_backdoor(dag, open_only = FALSE)

}
