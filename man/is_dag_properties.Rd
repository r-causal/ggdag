% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_functions.R
\name{is_dag_properties}
\alias{is_dag_properties}
\alias{is_acyclic}
\alias{is_adjustment_set}
\alias{is_d_separated}
\alias{is_d_connected}
\title{Test DAG properties}
\usage{
is_acyclic(.dag)

is_adjustment_set(.dag, Z, exposure = NULL, outcome = NULL)

is_d_separated(.dag, from = NULL, to = NULL, controlling_for = NULL)

is_d_connected(.dag, from = NULL, to = NULL, controlling_for = NULL)
}
\arguments{
\item{.dag}{A \code{tidy_dagitty} or \code{dagitty} object}

\item{Z}{A set of variables to test or condition on. This can be a character
vector of variable names, a list of the form \code{list(c(...))}, or \code{NULL}.}

\item{exposure}{A character vector, the exposure variable. Default is
\code{NULL}, in which case it will be determined from the DAG.}

\item{outcome}{A character vector, the outcome variable. Default is \code{NULL},
in which case it will be determined from the DAG.}

\item{from}{A character vector with starting node name(s), or \code{NULL}. If
\code{NULL}, checks DAG for exposure variable.}

\item{to}{A character vector with ending node name(s), or \code{NULL}. If \code{NULL},
checks DAG for outcome variable.}

\item{controlling_for}{A set of variables to control for. This can be a
character vector of variable names, a list of the form \code{list(c(...))}, or
\code{NULL}. When \code{NULL}, no control is applied. Default is \code{NULL}.}
}
\value{
A logical value indicating whether the tested property holds
}
\description{
These functions test various properties of DAGs:
\itemize{
\item \code{is_acyclic()} tests whether a DAG is acyclic
\item \code{is_adjustment_set()} tests whether a set of variables is a valid adjustment set
\item \code{is_d_separated()} tests whether two sets of variables are d-separated
\item \code{is_d_connected()} tests whether two sets of variables are d-connected
}
}
\examples{
dag <- dagify(
  y ~ x + z,
  x ~ z,
  exposure = "x",
  outcome = "y"
)

is_acyclic(dag)
is_adjustment_set(dag, "z")
is_d_separated(dag, "x", "y", "z")
is_d_connected(dag, "x", "y")

}
